#!/usr/bin/env python
PACKAGE = "graph_slam"
import roslib;roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("new_node_distance_T", double_t, 0, "translational distance after which to add a new node (m)", 0.3, 0.0, 10.0)
gen.add("new_node_distance_R", double_t, 0, "rotational distance after which to add a new node (deg)", 10.0, 0.0, 360.0)
gen.add("odom_covariance_T", double_t, 0, "translational covariance of the odometry (m/s)", 0.001, 0.0, 10.0)
gen.add("odom_covariance_R", double_t, 0, "rotational covariance of the odometry (deg/s)", 1.0, 0.0, 360.0)
gen.add("max_edge_error", double_t, 0, "acceptable edge error", 0.3, 0.0, 10.0)
gen.add("min_matching_score", double_t, 0, "minimum score that an edge needs to have in order to be added to the graph", 0.2, 0.0, 1.0)
gen.add("max_edge_distance_T", double_t, 0, "maximum edge translation allowed (m)", 1.0, 0.0, 5.0)
gen.add("max_edge_distance_R", double_t, 0, "maximum edge rotation allowed (deg)", 20.0, 0.0, 90.0)
gen.add("new_edge_time", double_t, -1, "minimum time between two edges", 5, -1, 100000)

exit(gen.generate(PACKAGE, "graph_slam", "GraphSlam"))
